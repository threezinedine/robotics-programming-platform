{% for class in classes %}
    {% if "python" in class.annotations %}
class {{ class.name }}:
    {%if class.comment-%}
    """
    {{ class.comment }}
    """
    {% endif %}
    {% if "singleton" not in class.annotations %}
    {% for constructor in class.constructors %}
    {% if class.constructors|length > 1 %}@overload{% endif %}
    def __init__(self {% if constructor.parameters|length > 0 %},{% endif %} {%-for constructor in constructor.parameters-%} 
            {{ constructor.name }} : {{ convertCppTypeToPyType(constructor.type) }} 
            {%-if not loop.last %}, {% endif -%} 
        {% endfor -%}) -> None:
        ...
    {% endfor %}
    {% if class.constructors|length == 0 %}
    def __init__(self) -> None:
        ...
    {% endif %}
    {% endif %}
        {% for method in class.methods-%}  
            {%-if "python" in method.annotations %}  
    {% if method.isStatic or "singleton" in class.annotations -%} @staticmethod {%- endif %}
    def {{ method.name }}({% if not method.isStatic and "singleton" not in class.annotations -%} 
        self 
            {%-if method.parameters|length > 0 %}, {% endif -%}
        {% endif -%} 
        {%-for parameter in method.parameters-%} 
            {{ parameter.name }} : {{ convertCppTypeToPyType(parameter.type) }} 
            {%-if not loop.last %}, {% endif -%} 
        {% endfor -%}
) -> {{ convertCppTypeToPyType(method.returnType) }}:
        {%if method.comment-%}
        """
        {{ method.comment }}
        """
        {% endif-%}
        ...
            {% endif %}
        {% endfor %}
        {% for field in class.fields %}
            {% if field.access == "public" %}
    {{ field.name }}: {{ convertCppTypeToPyType(field.type) }}
    {%if field.comment-%}
    """
    {{ field.comment }}
    """
    {% endif %}
            {% endif %}
        {% endfor %}
    {% endif %}
{% endfor %}