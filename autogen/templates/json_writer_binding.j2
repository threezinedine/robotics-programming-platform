{% for struct in structs %}
    {% if "json" in struct.annotations %}
template<>
const String ToString<{{ struct.name }}>(const {{ struct.name }} &value)
{
    Json result;

    {% for field in struct.fields-%}
    {% set jsonKey = isContainsJsonKeyAnnotation(field)-%}
    {% if jsonKey != ""-%}
    {% if field.type not in allJsonMappedClasses-%}
    result.Set(String("{{ jsonKey }}"), value.{{ field.name }});
    {% else-%}
    result.Set(String("{{ jsonKey }}"), Json(ToString(value.{{ field.name }})));
    {% endif-%}
    {% endif-%}
    {% endfor %} 
    return result.ToString();
}

template<>
bool FromString<{{ struct.name }}>(const String &str, {{ struct.name }} &value)
{
    Json json(str);

    {% for field in struct.fields-%}
    {% set jsonKey = isContainsJsonKeyAnnotation(field)-%}
    {% if jsonKey != ""-%}
    {% if field.type not in allJsonMappedClasses-%}
    value.{{ field.name }} = json.Get<{{field.type}}>(String("{{ jsonKey }}"), value.{{ field.name }});
    {% else-%}
    FromString(json.Get<String>(String("{{ jsonKey }}"), String("{}")), value.{{ field.name }});
    {% endif-%}
    {% endif-%}
    {% endfor %} 

    return true;
}
    {% endif %}
{% endfor %}